apply plugin: 'com.android.application'

//获取properties
def keystorePropertiesFile = rootProject.file("sign.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
        debug {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }

    compileSdkVersion 28
    defaultConfig {
        applicationId "com.xq.mygradle"
        minSdkVersion 15
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            //修改
            signingConfig signingConfigs.release
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            //修改
            signingConfig signingConfigs.debug
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}

println "============================================"
println "Configuration配置阶段"
println "解析所有projects对象中的task,构建好所有task的拓扑图（有向无环图）"
println "============================================"

//################## 引用自定义的gradle plugin ##########
buildscript {
    repositories {
        maven {//本地Maven仓库地址
            url uri('../repo')
        }
    }
    dependencies {
        //maven本地打包定义的gmv,引用格式为-->group:module:version
        classpath 'com.xq.plugin:test:1.0.0'
    }
}

//自定义gradle plugin的properties文件名
apply plugin: 'com.xq.groovy'
//################################################################
//赋值方式一：
testExt1 {
    //给插件扩展的属性赋值
    message "hello world 1111111111111111"

    nestArgs {
        msg "hello world nest--------------"
    }
}

//赋值方式二：
testExt2.message = "hello world 22222222222222"

//################################################################